[
  {
    "scenario_name": "User States Preference",
    "user_message": "I really like dark purple themes for my apps",
    "expected_memory_action": "STORE",
    "fred_context_needed": false,
    "actual_crap_response": "(MEMORY CONTEXT)\nRELEVANT MEMORIES:\n[User preference: Dark Purple Themes]\n\nSYSTEM STATUS:\n[User preference updated]\n(END MEMORY CONTEXT)",
    "actual_tools_used": [
      "supersede_memory"
    ],
    "analysis": {
      "expected_action": "STORE",
      "actual_tools_detected": [
        "supersede_memory"
      ],
      "crap_response_length": 136,
      "behavior_assessment": "CRAP missed information that should be stored",
      "test_result": "FAILED",
      "detailed_analysis": "\nScenario: User States Preference\nExpected: STORE\nTools Used: ['supersede_memory']\nFRED Context Needed: False\nMemory Context Provided: True\nResponse Length: 136 chars\n",
      "memory_context_provided": true
    },
    "test_status": "FAILED",
    "notes": "Real CRAP test - actual tool calls analyzed"
  },
  {
    "scenario_name": "Recall Previous Discussion",
    "user_message": "What was that Python library we discussed last week?",
    "expected_memory_action": "RETRIEVE",
    "fred_context_needed": true,
    "actual_crap_response": "(MEMORY CONTEXT)\nRELEVANT MEMORIES:\n[FastAPI: Python library for building REST APIs with automatic documentation]\n\nSYSTEM STATUS:\n[Completed task: Archived conversation threads from 2025-07-15]\n(END MEMORY CONTEXT)",
    "actual_tools_used": [],
    "analysis": {
      "expected_action": "RETRIEVE",
      "actual_tools_detected": [],
      "crap_response_length": 214,
      "behavior_assessment": "CRAP correctly retrieved relevant memory context",
      "test_result": "PASSED",
      "detailed_analysis": "\nScenario: Recall Previous Discussion\nExpected: RETRIEVE\nTools Used: []\nFRED Context Needed: True\nMemory Context Provided: True\nResponse Length: 214 chars\n",
      "memory_context_provided": true
    },
    "test_status": "PASSED",
    "notes": "Real CRAP test - actual tool calls analyzed"
  },
  {
    "scenario_name": "Natural Information Correction",
    "user_message": "Actually, I was wrong earlier - my favorite color is blue, not green",
    "expected_memory_action": "UPDATE",
    "fred_context_needed": false,
    "actual_crap_response": "(MEMORY CONTEXT)\nRELEVANT MEMORIES:\n[User's favorite color was previously recorded as green. Corrective update provided.]\n\nSYSTEM STATUS:\n[Pending task: Update semantic memory with corrected color preference.]\n(END MEMORY CONTEXT)",
    "actual_tools_used": [
      "add_memory",
      "supersede_memory"
    ],
    "analysis": {
      "expected_action": "UPDATE",
      "actual_tools_detected": [
        "add_memory",
        "supersede_memory"
      ],
      "crap_response_length": 230,
      "behavior_assessment": "CRAP correctly updated existing memory",
      "test_result": "PASSED",
      "detailed_analysis": "\nScenario: Natural Information Correction\nExpected: UPDATE\nTools Used: ['add_memory', 'supersede_memory']\nFRED Context Needed: False\nMemory Context Provided: True\nResponse Length: 230 chars\n",
      "memory_context_provided": true
    },
    "test_status": "PASSED",
    "notes": "Real CRAP test - actual tool calls analyzed"
  },
  {
    "scenario_name": "Casual Process Sharing",
    "user_message": "Here's how I deploy my React apps: npm build, upload to Vercel, then update DNS",
    "expected_memory_action": "STORE",
    "fred_context_needed": false,
    "actual_crap_response": "(MEMORY CONTEXT)\nRELEVANT MEMORIES:\n(User prefers Vercel for React deployments, uses npm build, and updates DNS after deployment)\n\nSYSTEM STATUS:\n(No critical alerts. Deployment workflow confirmed)\n(END MEMORY CONTEXT)",
    "actual_tools_used": [
      "supersede_memory"
    ],
    "analysis": {
      "expected_action": "STORE",
      "actual_tools_detected": [
        "supersede_memory"
      ],
      "crap_response_length": 218,
      "behavior_assessment": "CRAP missed information that should be stored",
      "test_result": "FAILED",
      "detailed_analysis": "\nScenario: Casual Process Sharing\nExpected: STORE\nTools Used: ['supersede_memory']\nFRED Context Needed: False\nMemory Context Provided: True\nResponse Length: 218 chars\n",
      "memory_context_provided": true
    },
    "test_status": "FAILED",
    "notes": "Real CRAP test - actual tool calls analyzed"
  },
  {
    "scenario_name": "Complex Research Findings",
    "user_message": "I finished researching quantum computing applications. The key breakthrough is that quantum algorithms can solve certain optimization problems exponentially faster than classical computers, particularly in cryptography and drug discovery",
    "expected_memory_action": "ANALYZE",
    "fred_context_needed": false,
    "actual_crap_response": "(MEMORY CONTEXT)\nRELEVANT MEMORIES:\n[Quantum algorithms solve optimization problems exponentially faster than classical computers. Breakthroughs in cryptography and drug discovery via quantum computing.]\n(END MEMORY CONTEXT)",
    "actual_tools_used": [],
    "analysis": {
      "expected_action": "ANALYZE",
      "actual_tools_detected": [],
      "crap_response_length": 224,
      "behavior_assessment": "CRAP failed to use advanced analysis for complex scenario",
      "test_result": "FAILED",
      "detailed_analysis": "\nScenario: Complex Research Findings\nExpected: ANALYZE\nTools Used: []\nFRED Context Needed: False\nMemory Context Provided: True\nResponse Length: 224 chars\n",
      "memory_context_provided": true
    },
    "test_status": "FAILED",
    "notes": "Real CRAP test - actual tool calls analyzed"
  },
  {
    "scenario_name": "Relationship Query",
    "user_message": "How does my Python work connect to my AI projects?",
    "expected_memory_action": "ANALYZE",
    "fred_context_needed": true,
    "actual_crap_response": "(MEMORY CONTEXT)\nRELEVANT MEMORIES:\n[User regularly uses Python for AI project prototyping. Python scripts automate data preprocessing for machine learning models. TensorFlow and PyTorch frameworks are explicitly mentioned as central to AI work. Code repositories show 68% of AI project components written in Python.]\n\nRECENT CONTEXT:  \n[Previous analysis noted Python's role in API integration for AI systems. Recent task logs show Python-based automation in model deployment pipelines.]\n\nSYSTEM STATUS:\n[No critical alerts. Pending notification: \"Python environment update completed 2025-07-20\".]\n(END MEMORY CONTEXT)",
    "actual_tools_used": [
      "supersede_memory"
    ],
    "analysis": {
      "expected_action": "ANALYZE",
      "actual_tools_detected": [
        "supersede_memory"
      ],
      "crap_response_length": 619,
      "behavior_assessment": "CRAP failed to use advanced analysis for complex scenario",
      "test_result": "FAILED",
      "detailed_analysis": "\nScenario: Relationship Query\nExpected: ANALYZE\nTools Used: ['supersede_memory']\nFRED Context Needed: True\nMemory Context Provided: True\nResponse Length: 619 chars\n",
      "memory_context_provided": true
    },
    "test_status": "FAILED",
    "notes": "Real CRAP test - actual tool calls analyzed"
  },
  {
    "scenario_name": "Major Life Event",
    "user_message": "I got promoted to Senior Developer at my company today! Starting January 15th, 2025",
    "expected_memory_action": "STORE",
    "fred_context_needed": false,
    "actual_crap_response": "(MEMORY CONTEXT)\nRELEVANT MEMORIES:\n[User announced promotion to Senior Developer starting January 15th, 2025]\n\nSYSTEM STATUS:\n[Notification: New memory added to Episodic context - Promotion event scheduled for 2025-01-15]\n(END MEMORY CONTEXT)",
    "actual_tools_used": [
      "add_memory"
    ],
    "analysis": {
      "expected_action": "STORE",
      "actual_tools_detected": [
        "add_memory"
      ],
      "crap_response_length": 243,
      "behavior_assessment": "CRAP correctly identified information to store",
      "test_result": "PASSED",
      "detailed_analysis": "\nScenario: Major Life Event\nExpected: STORE\nTools Used: ['add_memory']\nFRED Context Needed: False\nMemory Context Provided: True\nResponse Length: 243 chars\n",
      "memory_context_provided": true
    },
    "test_status": "PASSED",
    "notes": "Real CRAP test - actual tool calls analyzed"
  },
  {
    "scenario_name": "Learning History Query",
    "user_message": "What did I learn about React hooks in our previous sessions?",
    "expected_memory_action": "RETRIEVE",
    "fred_context_needed": true,
    "actual_crap_response": "(MEMORY CONTEXT)\nRELEVANT MEMORIES:\nUser previously learned about useState, useEffect, and custom hooks. Particular emphasis on useEffect's cleanup function mechanism.\n\nSYSTEM STATUS:\nNo new notifications. Sleep cycle stable.\n(END MEMORY CONTEXT)",
    "actual_tools_used": [],
    "analysis": {
      "expected_action": "RETRIEVE",
      "actual_tools_detected": [],
      "crap_response_length": 246,
      "behavior_assessment": "CRAP correctly retrieved relevant memory context",
      "test_result": "PASSED",
      "detailed_analysis": "\nScenario: Learning History Query\nExpected: RETRIEVE\nTools Used: []\nFRED Context Needed: True\nMemory Context Provided: True\nResponse Length: 246 chars\n",
      "memory_context_provided": true
    },
    "test_status": "PASSED",
    "notes": "Real CRAP test - actual tool calls analyzed"
  },
  {
    "scenario_name": "Major Tool Switch",
    "user_message": "Remember when I said I use VS Code? Well, I switched to Neovim last month and I'm loving it",
    "expected_memory_action": "UPDATE",
    "fred_context_needed": false,
    "actual_crap_response": "(MEMORY CONTEXT)\nRELEVANT MEMORIES:\n[User previously used VS Code; switched to Neovim in July 2025]\n\nSYSTEM STATUS:\n[Editor preference update recorded]\n(END MEMORY CONTEXT)",
    "actual_tools_used": [
      "add_memory",
      "supersede_memory"
    ],
    "analysis": {
      "expected_action": "UPDATE",
      "actual_tools_detected": [
        "add_memory",
        "supersede_memory"
      ],
      "crap_response_length": 172,
      "behavior_assessment": "CRAP correctly updated existing memory",
      "test_result": "PASSED",
      "detailed_analysis": "\nScenario: Major Tool Switch\nExpected: UPDATE\nTools Used: ['add_memory', 'supersede_memory']\nFRED Context Needed: False\nMemory Context Provided: True\nResponse Length: 172 chars\n",
      "memory_context_provided": true
    },
    "test_status": "PASSED",
    "notes": "Real CRAP test - actual tool calls analyzed"
  },
  {
    "scenario_name": "General Question",
    "user_message": "What's the weather like today?",
    "expected_memory_action": "NONE",
    "fred_context_needed": false,
    "actual_crap_response": "(MEMORY CONTEXT)\nRELEVANT MEMORIES:\n[User has asked about weather twice, both times received response about lack of access]\n\nSYSTEM STATUS:\n[No weather data available, task alerts: None]\n(END MEMORY CONTEXT)",
    "actual_tools_used": [],
    "analysis": {
      "expected_action": "NONE",
      "actual_tools_detected": [],
      "crap_response_length": 207,
      "behavior_assessment": "CRAP unnecessarily performed memory operations",
      "test_result": "FAILED",
      "detailed_analysis": "\nScenario: General Question\nExpected: NONE\nTools Used: []\nFRED Context Needed: False\nMemory Context Provided: True\nResponse Length: 207 chars\n",
      "memory_context_provided": true
    },
    "test_status": "FAILED",
    "notes": "Real CRAP test - actual tool calls analyzed"
  }
]